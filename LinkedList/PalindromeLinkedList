/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head == null) return true;
        
        ListNode slowPointer = head;
        ListNode fastPointer = head;
        
        while (fastPointer != null && fastPointer.next != null) {
            slowPointer = slowPointer.next;
            fastPointer = fastPointer.next.next;
        }
        
        if (fastPointer != null) {
            slowPointer = slowPointer.next;
        }
        
        slowPointer = reverse(slowPointer);
        fastPointer = head;
        
        while(slowPointer != null) {
            if (slowPointer.val != fastPointer.val) {
                return false;
            }
            slowPointer = slowPointer.next;
            fastPointer = fastPointer.next;
        }
        return true;
    }
    
    private ListNode reverse (ListNode head) {
        ListNode prev = null;
        
        while (head != null) {
            ListNode temp = head.next;
            head.next = prev;
            prev = head;
            head = temp;
        }
        return prev;
    }
    
}
