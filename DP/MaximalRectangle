class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix == null || matrix.length == 0) {
            return 0;
        }
        
        int R = matrix.length;
        int C = matrix[0].length;
        
        int[] left = new int[C];
        int[] right = new int[C];
        int[] height = new int[C];
        int maxArea = 0;
        
        Arrays.fill(right, C);
        
        for (int i = 0; i < R; i++) {
            int left_R = 0, right_R = C;
            
            for (int j = 0; j < C; j++) {
                if (matrix[i][j] == '1') {
                    left[j] = Math.max(left[j], left_R);
                } else {
                    left[j] = 0;
                    left_R = j+1;
                }
            }
            
            for (int j = C-1; j >= 0; j--) {
                if(matrix[i][j] == '1') {
                    right[j] = Math.min(right[j], right_R);
                } else {
                    right[j] = C;
                    right_R = j;
                }
            }
            
            for (int j = 0; j < C; j++) {
                if(matrix[i][j] == '1') {
                    height[j] = height[j] + 1;
                } else {
                    height[j] = 0;
                }
            }
            
            for(int j = 0; j < C; j++) {
                maxArea = Math.max(maxArea, (right[j]-left[j])*height[j]);
            }
            
        }
        return maxArea;
    }
}
