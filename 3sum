class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        if (nums == null || nums.length < 3) {
            return result;
        }
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 2; i++) {
            if (i > 0 && nums[i] == nums[i-1]) {
                continue;
            }
            
            int left = i + 1;
            int right = nums.length - 1;
            twoSum(nums, -nums[i], left, right, result);
        }
        return result;
    }
    
    private void twoSum(int[] nums, int target, int left, int right, List<List<Integer>> result) {
        while (left < right) {
            if (nums[left] + nums[right] == target) {
                result.add(Arrays.asList(-target, nums[left], nums[right]));        
                left++;
                right--;
            
                while(left < right && nums[left] == nums[left - 1]) {
                    left++;
                }
                while(left < right && nums[right] == nums[right + 1]) {
                    right--;
                }
            } else if (nums[left] + nums[right] < target) {
                left++;
            } else {
                right --;
            }
        }
    }
}
