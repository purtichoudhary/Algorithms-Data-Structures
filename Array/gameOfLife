class Solution {
    public void gameOfLife(int[][] board) {
        if (board == null) {
            throw new IllegalArgumentException("Invalid input");
        }
        
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                int live = liveNeighbour(board, i, j);
                
                if (board[i][j] == 1 && live >= 2 && live <= 3) {
                    board[i][j] = 3;
                }
                if(board[i][j] == 0 && live == 3) {
                    board[i][j] = 2;
                }
            }
        }
        
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                board[i][j] >>= 1;
            }
        }
    }
    
    private int liveNeighbour(int[][] board, int i, int j) {
        int[][] dirs = {{-1,0}, {1,0}, {0,-1}, {0,1}, {-1,-1}, {1,1}, {-1,1}, {1,-1}};
        int live = 0;
        
        for (int[] dir : dirs) {
            int x = i + dir[0];
            int y = j + dir[1];
            
            if (x < 0 || x >= board.length || y < 0 || y >= board[0].length) continue;
            live += board[x][y] & 1;
        }
        return live;
    }
}
