class Solution {
    Map<Integer, Integer> color;
    int[][] graph;
    public boolean isBipartite(int[][] graph) {
        this.graph = graph;
        color = new HashMap<>();
        for(int node = 0; node < graph.length; node++) {
            if(!color.containsKey(node) && !dfs(node, 0)) {
                return false;
            }
        }
        return true;
    }
    
    private boolean dfs(int node, int c) {
        if(color.containsKey(node)) {
            return color.get(node) == c;
        }
        color.put(node, c);
        for(int neigh: graph[node]) {
            if(!dfs(neigh, c^1)) {
                return false;
            }
        }
        return true;
    }
}
