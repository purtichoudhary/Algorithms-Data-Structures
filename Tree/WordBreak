class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> words = new HashSet(wordDict);
        Queue<Integer> q = new LinkedList<>();
        int max = 0;
        for(String word : wordDict) {
            max = Math.max(max, word.length());
        }
        int[] visited = new int[s.length()];
        q.add(0);
        
        while(!q.isEmpty()) {
            int start = q.poll();
            if(visited[start] == 0) {
                for(int end = start+1; end <= s.length(); end++) {
                    if(end-start > max) {
                        break;
                    }
                    if(words.contains(s.substring(start, end))) {
                        q.add(end);
                        if(end == s.length()) {
                            return true;
                        }
                    }
                    visited[start] = 1;
                }
            }
        }
        return false;
    }
}
